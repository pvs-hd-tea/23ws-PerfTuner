
#include <immintrin.h>

void function(int n, double a, double *b, double c, double *d, double *e)
{
    // Optimize the relevant subtasks using AVX intrinsics
    int vec_size = 4;
    __m256d vec1, vec2, factor;
    double t = a;
    t /= c;
    factor = _mm256_set1_pd(t);

    int i = 0;
    for (; i <= n - vec_size; i += vec_size)
    {
        vec1 = _mm256_loadu_pd(&b[i]);
        vec2 = _mm256_loadu_pd(&d[i]);
        vec2 = _mm256_fmsub_pd(factor, vec1, vec2);
        _mm256_storeu_pd(&e[i], vec2);
    }

    for (; i < n; i++)
    {
        e[i] = t * b[i] - d[i];
    }
}
